@import url(https://fonts.googleapis.com/css?family=Inconsolata&display=swap);.fullscreen-bg {
  position: fixed;
  display: none;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  z-index: -100;
}

.fullscreen-bg .overlay {
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  margin: 0;
  padding: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 1;
}

.fullscreen-bg video {
  position: absolute;
  top: 50%;
  left: 50%;
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  z-index: 0;
  -webkit-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
}

.homeText {
  position: fixed;
  display: none;
  top: 0;
  left: 0;
  width: 100%;
  color: #A5C261;
  z-index: -2;
}

.homeText .row {
  height: 100vh;
}

.homeText .col {
  z-index: 2;
}

.scroll-downs {
  position: absolute;
  top: -100px;
  margin: auto;
  width: 34px;
  height: 55px;
}

.mousey {
  width: 3px;
  padding: 10px 15px;
  height: 35px;
  border: 2px solid #fff;
  border-radius: 25px;
  opacity: 0.75;
  box-sizing: content-box;
}

.scroller {
  width: 3px;
  height: 10px;
  border-radius: 25%;
  background-color: #fff;
  -webkit-animation-name: scroll;
          animation-name: scroll;
  -webkit-animation-duration: 2.2s;
          animation-duration: 2.2s;
  -webkit-animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);
          animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

@-webkit-keyframes scroll {
  0% {
    opacity: 0;
  }

  10% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(15px);
            transform: translateY(15px);
    opacity: 0;
  }
}

@keyframes scroll {
  0% {
    opacity: 0;
  }

  10% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(15px);
            transform: translateY(15px);
    opacity: 0;
  }
}

.poly-background canvas {
  position: fixed;
  display: none;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  z-index: -1;
}

.page-content {
  position: relative;
  margin: 100vh 0 50vh 0;
}

#about {
  position: relative;
  background-color: white;
  box-shadow: 0px 3px 15px black;
}

#projects {
  position: relative;
  margin-top: -150px;
  padding: 150px 0 150px 0;
}

#career {
  background-color: white;
  box-shadow: 0px 3px 15px black;
}

.content-sections {
  min-height: 100vh;
  z-index: 3;
}

.projects {
  margin: 0;
  padding: 0;
  width: 100%;
}

.row-overlap {
  position: relative;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  z-index: 4;
}

.row-overlap .row-overlap-child {
  border-radius: 5px;
  background-color: white;
  box-shadow: 0px 1px 27px -3px rgba(0, 0, 0, 0.2);
}

.row-overlap .row-overlap-child-counter {
  height: 150px;
}

.project {
  overflow: visible;
}

.project-image-div {
  overflow: visible;
}

.project-bg {
  width: 300px;
  height: 300px;
  border-radius: 5px;
  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);
}

@media (min-width: 576px) {
  .project-bg {
    width: 300px;
    height: 300px;
    border-radius: 5px;
  }
}

@media (min-width: 768px) {
  .project-bg {
    width: 300px;
    height: 300px;
    border-radius: 5px;
  }
}

@media (min-width: 992px) {
  .project-bg {
    width: 400px;
    height: 400px;
    border-radius: 5px;
  }
}

@media (min-width: 1200px) {
  .project-bg {
    width: 400px;
    height: 400px;
    border-radius: 5px;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/